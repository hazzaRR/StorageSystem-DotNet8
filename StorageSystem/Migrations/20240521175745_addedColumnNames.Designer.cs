// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StorageSystem.Models;

#nullable disable

namespace StorageSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240521175745_addedColumnNames")]
    partial class addedColumnNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StorageSystem.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("item");
                });

            modelBuilder.Entity("StorageSystem.Models.ItemStorageBin", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("itemId");

                    b.Property<int>("StorageBinId")
                        .HasColumnType("integer")
                        .HasColumnName("binId");

                    b.HasKey("ItemId", "StorageBinId");

                    b.HasIndex("StorageBinId");

                    b.ToTable("item_storagebin");
                });

            modelBuilder.Entity("StorageSystem.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("location");
                });

            modelBuilder.Entity("StorageSystem.Models.StorageBin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("storagebin");
                });

            modelBuilder.Entity("StorageSystem.Models.ItemStorageBin", b =>
                {
                    b.HasOne("StorageSystem.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Models.StorageBin", "StorageBin")
                        .WithMany()
                        .HasForeignKey("StorageBinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("StorageBin");
                });

            modelBuilder.Entity("StorageSystem.Models.StorageBin", b =>
                {
                    b.HasOne("StorageSystem.Models.Item", null)
                        .WithMany("StorageBins")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("StorageSystem.Models.Item", b =>
                {
                    b.Navigation("StorageBins");
                });
#pragma warning restore 612, 618
        }
    }
}
